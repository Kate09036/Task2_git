//1.2
public class Program 
{
	public static void main(String[] args)
	{
		System.out.println(repeat("mice", 5));
		System.out.println(repeat("hello", 3));
		System.out.println(repeat("stop", 1));
	}
	
	public static String repeat(String str, int count) 
	{
		String result = "";
		
		for(int i = 0; i < str.length(); ++i)
			for(int j = 0; j < count; ++j)
				result += str.charAt(i);
		
		return result;
	}
}


//2.2
public class Program 
{
	public static void main(String[] args)
	{
		int[] arr1 = {10, 4, 1, 4, -10, -50, 32, 21};
		int[] arr2 = {44, 32, 86, 19};
		
		System.out.println(differenceMaxMin(arr1));
		System.out.println(differenceMaxMin(arr2));
	}
	
	public static int differenceMaxMin(int[] arr) 
	{
		// Индексы максимума и минимума
		int min = 0;
		int max = 0;
		
		// Поиск максимума и минимума
		for(int i = 0; i < arr.length; ++i)
		{
			if(arr[i] > arr[max])
				max = i;
			if(arr[i] < arr[min])
				min = i;
		}
		
		// Возвращается разница между ними
		return arr[max] - arr[min];
	}
}

//3.2
public class Program 
{
	public static void main(String[] args)
	{
		int[] arr1 = {1, 3};
		int[] arr2 = {1, 2, 3, 4};
		int[] arr3 = {1, 5, 6};
		int[] arr4 = {1, 1, 1};
		int[] arr5 = {9, 2, 2, 5};
		
		System.out.println(isAvgWhole(arr1));
		System.out.println(isAvgWhole(arr2));
		System.out.println(isAvgWhole(arr3));
		System.out.println(isAvgWhole(arr4));
		System.out.println(isAvgWhole(arr5));
	}
	
	public static boolean isAvgWhole(int[] arr) 
	{
		double sum = 0;
		
		// Суммируем все элементы массива
		for(int i = 0; i < arr.length; ++i)
			sum += arr[i];
		
		double avg = sum / arr.length;
		
		if(avg % 1 == 0)
			return true;
		else
			return false;
	}
  
  //4.2
public class Program 
{
	public static void main(String[] args)
	{
		int[] arr1 = {1, 2, 3};
		int[] arr2 = {1, -2, 3};
		int[] arr3 = {3, 3, -2, 408, 3, 3};

		showArr(cumulativeSum(arr1));
		showArr(cumulativeSum(arr2));
		showArr(cumulativeSum(arr3));
	}
	
	// Красивый вывод массива
	public static void showArr(int[] arr) 
	{
		System.out.print("[");
		for(int i = 0; i < arr.length; ++i)
			if(i == arr.length - 1)
				System.out.print(arr[i]);
			else
				System.out.print(arr[i] + ", ");
		System.out.print("]\n");
	}
	
	public static int[] cumulativeSum(int[] arr) 
	{
		int[] result = new int[arr.length];
		
		for(int i = 0; i < result.length; ++i)
			for(int j = 0; j <= i; ++j)
				result[i] += arr[j];
		
		return result;
	}
}


//5.2
public class Program 
{
	public static void main(String[] args)
	{
		System.out.println(getDecimalPlaces("43.20"));
		System.out.println(getDecimalPlaces("400"));
		System.out.println(getDecimalPlaces("3.1"));
	}
	

	public static int getDecimalPlaces(String str) 
	{
		int result = 0;
		
		for(int i = 0; i < str.length(); ++i)
			if(str.charAt(i) == '.') 
			{
				result = str.length() - i - 1;
				break;
			}
		
		return result;
	}
}


//6.2
public class Program 
{
	public static void main(String[] args)
	{
		System.out.println(Fibonacci(3));
		System.out.println(Fibonacci(7));
		System.out.println(Fibonacci(12));
	}
	
	static int Fibonacci(int n)
	{
		int a = 0;
		int b = 1;
		
		for (int i = 1; i <= n; ++i) 
		{
		    int next = a + b;
		    a = b;
		    b = next;
		}
		
		return b;
	}
}


//7.2
public class Program 
{
	public static void main(String[] args)
	{
		System.out.println(isValid("59001"));
		System.out.println(isValid("853a7"));
		System.out.println(isValid("732 32"));
		System.out.println(isValid("393939"));
	}
	
	static boolean isValid(String str)
	{
		// Проверка на длину строки
		if(str.length() > 5)
			return false;
		
		for(int i = 0; i < str.length(); ++i)
		{
			// Проверка на цифры
			if(str.charAt(i) < '0' || str.charAt(i) > '9')
				return false;
			// Проверка на пробелы
			if(str.charAt(i) == ' ')
				return false;
		}
		
		return true;
	}
}


//8.2
public class Program 
{
	public static void main(String[] args)
	{
		System.out.println(isStrangePair("ratio", "orator"));
		System.out.println(isStrangePair("sparkling", "groups"));
		System.out.println(isStrangePair("bush", "hubris"));
		System.out.println(isStrangePair("", ""));
	}
	
	static boolean isStrangePair(String str1, String str2)
	{
		if(str1.length() == 0 && str2.length() == 0)
			return true;
		
		// Первая буква первой строки == последняя буква второй строки
		boolean one = str1.charAt(0) == str2.charAt(str2.length() - 1);
		// Последняя буква первой строки == первая буква второй строки
		boolean two = str1.charAt(str1.length() - 1) == str2.charAt(0);
		
		if(!one || !two)
			return false;
		else
			return true;
	}
}


//9.2
public class Program 
{
	public static void main(String[] args)
	{
		System.out.println(isPrefix("automation", "auto-"));
		System.out.println(isSuffix("arachnophobia", "-phobia"));
		System.out.println(isPrefix("retrospect", "sub-"));
		System.out.println(isSuffix("vocation", "-logy"));
	}
	
	static boolean isPrefix(String str1, String str2)
	{
		for(int i = 0; i < str2.length() - 1; ++i)
			if(str1.charAt(i) != str2.charAt(i))
				return false;
		
		return true;
	}
	
	static boolean isSuffix(String str1, String str2) 
	{
		// i = длина первой строки - длина второй строки + символ тире
		for(int i = str1.length() - str2.length() + 1, j = 1; i < str1.length() && j < str2.length(); ++i, ++j)
			if(str1.charAt(i) != str2.charAt(j))
				return false;
		
		return true;
	}
}


//10.2
public class Program 
{
	public static void main(String[] args)
	{
		System.out.println(boxSeq(0));
		System.out.println(boxSeq(1));
		System.out.println(boxSeq(2));
		System.out.println(boxSeq(3));
		System.out.println(boxSeq(4));
		System.out.println(boxSeq(5));
		System.out.println(boxSeq(6));
	}
	
	static int boxSeq(int step)
	{
		int result = 0;
		
		for(int i = 1; i <= step; ++i)
		{
			if(i % 2 == 0)
				result -= 1;
			else
				result += 3;
		}
		
		return result;
	}
}

